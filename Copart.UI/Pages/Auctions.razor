@page "/auctions"
@using Copart.BLL.Models.LotModels
@inject ILotApi LotApi
@inject NavigationManager NavigationManager

<PageTitle>Auctions</PageTitle>

<MudDataGrid Items="@lots" Loading="isLoading">
    <Columns>
        <PropertyColumn Property="x => x.LotNumber" Title="Lot Num" />
        <PropertyColumn Property="x => x.StartDate" Title="Start" />
        <PropertyColumn Property="x => x.EndDate" Title="Finish" />
        <PropertyColumn Property="x => x.CurrentBid" Title="Curr bid" />
        <PropertyColumn Property="x => x.Vehicle.Model" Title="Vehicle Model" />

        <TemplateColumn Title="Actions">
            <CellTemplate>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => NavigateToLot(context.Item)">
                    Details
                </MudButton>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {
    private List<LotModel> lots = new();
    private bool isLoading = true;
    private Timer timer = null!;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var data = await LotApi.GetAll();
            lots = data.ToList();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading lots: {ex}");
        }
        finally
        {
            isLoading = false;
        }
        TimerStart();
    }

    private void TimerStart()
    {
        timer = new Timer((state) =>
        {
            InvokeAsync(StateHasChanged);
        }, null, 1000, 1000);
    }

    public void Dispose()
    {
        timer?.Dispose();
    }

    public void NavigateToLot(LotModel lot)
    {
        NavigationManager.NavigateTo($"/lotdetail/{lot.LotNumber}");
    }
}
